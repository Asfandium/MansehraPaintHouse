@model MansehraPaintHouse.Core.Entities.Product

@{
    ViewData["Title"] = Model.ProductID == 0 ? "Add Product" : "Edit Product";
    Layout = "_Layout";

    // Cast ViewBag items to their respective types
    var categories = ViewBag.Categories as IEnumerable<MansehraPaintHouse.Core.Entities.Category>;
    var attributes = ViewBag.Attributes as IEnumerable<MansehraPaintHouse.Core.Entities.ProductAttribute>;
}

<h2>@ViewData["Title"]</h2>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">@(Model.ProductID == 0 ? "Add New Product" : "Edit Product")</h3>
                </div>
                <div class="card-body">
                    <form id="productForm" asp-action="ProductUpsert" method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="ProductID" />
                        <input type="hidden" asp-for="IsVariationProduct" id="isVariationProduct" />

                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Name" class="form-label required"></label>
                                    <input asp-for="Name" class="form-control" placeholder="Enter product name" />
                                    <span asp-validation-for="Name" class="text-danger small"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CategoryID" class="form-label required"></label>
                                    <select asp-for="CategoryID" class="form-select" id="categorySelect">
                                        <option value="">-- Select Category --</option>
                                        @foreach (var category in categories.Where(c => c.ParentCategoryID == null))
                                        {
                                            var isSelected = Model.CategoryID == category.CategoryID;
                                            <option value="@category.CategoryID" selected="@isSelected">@category.Name</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CategoryID" class="text-danger small"></span>
                                </div>
                            </div>

                           @*  <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label required">Subcategory</label>
                                    <select class="form-select" id="subcategorySelect" name="SubcategoryID" required>
                                        <option value="">-- Select Subcategory --</option>
                                        @foreach (var category in categories.Where(c => c.ParentCategoryID == Model.CategoryID))
                                        {
                                            <option value="@category.CategoryID">@category.Name</option>
                                        }
                                    </select>
                                    <span class="text-danger small" id="subcategoryError"></span>
                                </div>
                            </div> *@

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Subcategory</label>
                                    <select class="form-select" id="subcategorySelect" name="SubcategoryID">
                                        <option value="">-- Select Subcategory --</option>
                                        @foreach (var category in categories.Where(c => c.ParentCategoryID == Model.CategoryID))
                                        {
                                            <option value="@category.CategoryID">@category.Name</option>
                                        }
                                    </select>
                                    <span class="text-danger small" id="subcategoryError"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label required">Product Type</label>
                                    <select id="productType" class="form-select">
                                        <option value="normal" selected="@(!Model.IsVariationProduct)">Normal Product</option>
                                        <option value="variation" selected="@Model.IsVariationProduct">Variation Product</option>
                                    </select>
                                </div>
                            </div>

                            <div id="normalProductFields" style="display: @(!Model.IsVariationProduct ? "block" : "none");">
                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label asp-for="Description" class="form-label required"></label>
                                        <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter description"></textarea>
                                        <span asp-validation-for="Description" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="SKU" class="form-label required"></label>
                                        <input asp-for="SKU" class="form-control" placeholder="Enter SKU" />
                                        <span asp-validation-for="SKU" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="Price" class="form-label required"></label>
                                        <input asp-for="Price" class="form-control" type="number" step="0.01" placeholder="Enter price" />
                                        <span asp-validation-for="Price" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="StockQuantity" class="form-label required"></label>
                                        <input asp-for="StockQuantity" class="form-control" type="number" placeholder="Enter stock quantity" />
                                        <span asp-validation-for="StockQuantity" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="MinimumStockLevel" class="form-label required"></label>
                                        <input asp-for="MinimumStockLevel" class="form-control" type="number" placeholder="Enter minimum stock level" />
                                        <span asp-validation-for="MinimumStockLevel" class="text-danger small"></span>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="CreatedAt" class="form-label"></label>
                                        <input asp-for="CreatedAt" class="form-control" type="datetime-local" readonly />
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label asp-for="UpdatedAt" class="form-label"></label>
                                        <input asp-for="UpdatedAt" class="form-control" type="datetime-local" readonly />
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="mb-3">
                                        <label class="form-label">Product Image</label>
                                        <input type="file" name="imageFile" class="form-control" accept="image/*" />
                                    </div>
                                </div>

                                <div class="col-12">
                                    <div class="mb-3">
                                        <div class="form-check">
                                            <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                            <label asp-for="IsActive" class="form-check-label"></label>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="variationProductFields" style="display: @(Model.IsVariationProduct ? "block" : "none");">
                                <div class="col-12">
                                    <div class="mb-3">
                                        <button type="button" class="btn btn-primary" id="addVariationBtn">
                                            <i class="bi bi-plus-circle"></i> Add Variation
                                        </button>
                                    </div>
                                </div>

                                <div id="variationsContainer">
                                    <!-- Variations will be added here dynamically -->
                                </div>

                                <div id="variationsPreview" class="mt-3">
                                    <h5>Variations Preview</h5>
                                    <div class="table-responsive">
                                        <table class="table table-bordered" id="variationsTable">
                                            <thead>
                                                <tr>
                                                    <th>Attribute</th>
                                                    <th>Value</th>
                                                    <th>Color Code</th>
                                                    <th>SKU</th>
                                                    <th>Description</th>
                                                    <th>Price</th>
                                                    <th>Stock</th>
                                                    <th>Min Stock</th>
                                                    <th>Is Active</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <!-- Variation rows will be added here -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="text-end">
                            <a asp-action="ProductIndex" class="btn btn-secondary">Cancel</a>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Attribute Modal -->
<div class="modal fade" id="addAttributeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Attribute</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="attributeForm">
                    <div class="mb-3">
                        <label class="form-label required">Attribute Name</label>
                        <input type="text" class="form-control" id="attributeName" required />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveAttributeBtn">Save</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Initialize with correct product type
            $('#isVariationProduct').val($('#productType').val() === 'variation');

            // Handle category change
            $('#categorySelect').change(function () {
                var categoryId = $(this).val();
                var subcategorySelect = $('#subcategorySelect');
                subcategorySelect.empty();
                subcategorySelect.append('<option value="">-- Select Subcategory --</option>');

                if (categoryId) {
                    $.get('/Product/GetSubcategories/' + categoryId, function (data) {
                        $.each(data, function (index, item) {
                            subcategorySelect.append($('<option></option>').val(item.categoryID).text(item.name));
                        });
                    }).fail(function () {
                        alert('Failed to load subcategories.');
                    });
                }
            });

            // Handle product type change
            $('#productType').change(function () {
                var type = $(this).val();
                $('#isVariationProduct').val(type === 'variation');
                if (type === 'normal') {
                    $('#normalProductFields').show();
                    $('#variationProductFields').hide();
                } else {
                    $('#normalProductFields').hide();
                    $('#variationProductFields').show();
                }
            });

            // Handle add variation button click
            $('#addVariationBtn').click(function () {
                addVariationForm();
            });

            function addVariationForm() {
                var variationHtml = `
                    <div class="variation-form border p-3 mb-3">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label required">Attribute</label>
                                <div class="input-group">
                                    <select class="form-select attribute-select" required>
                                        <option value="">-- Select Attribute --</option>
        @foreach (var attr in attributes)
        {
            <text><option value="@attr.ProductAttributeID">@attr.Name</option></text>
        }
                                    </select>
                                    <button type="button" class="btn btn-outline-secondary add-attribute-btn">
                                        <i class="bi bi-plus-circle"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label required">Value</label>
                                <input type="text" class="form-control value-input" required />
                            </div>
                            <div class="col-md-4 color-fields" style="display: none;">
                                <label class="form-label required">Color Code</label>
                                <input type="color" class="form-control color-code" required />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label required">SKU</label>
                                <input type="text" class="form-control sku" required />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label required">Description</label>
                                <textarea class="form-control description" required></textarea>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label required">Price</label>
                                <input type="number" class="form-control price-input" step="0.01" required />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label required">Stock Quantity</label>
                                <input type="number" class="form-control stock-input" required />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label required">Minimum Stock Level</label>
                                <input type="number" class="form-control minstock-input" required />
                            </div>
                            <div class="col-md-12">
                                <label class="form-label required">Image</label>
                                <input type="file" class="form-control variation-image" accept="image/*" required />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Created At</label>
                                <input type="datetime-local" class="form-control created-at" readonly />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Updated At</label>
                                <input type="datetime-local" class="form-control updated-at" readonly />
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Is Active</label>
                                <input type="checkbox" class="form-check-input is-active" checked />
                            </div>
                            <div class="col-12">
                                <button type="button" class="btn btn-success add-to-preview">
                                    <i class="bi bi-check-circle"></i> Add to Preview
                                </button>
                                <button type="button" class="btn btn-danger remove-variation">
                                    <i class="bi bi-trash"></i> Remove
                                </button>
                            </div>
                        </div>
                    </div>
                `;
                $('#variationsContainer').append(variationHtml);

                // Set default CreatedAt and UpdatedAt values
                var now = new Date().toISOString().slice(0, 16);
                $('.variation-form:last .created-at').val(now);
                $('.variation-form:last .updated-at').val(now);
            }

            // Handle attribute change in variation form
            $(document).on('change', '.attribute-select', function () {
                var form = $(this).closest('.variation-form');
                var attributeName = $(this).find('option:selected').text().toLowerCase();
                form.find('.color-fields').toggle(attributeName.includes('color'));
            });

            // Handle add attribute button click
            $(document).on('click', '.add-attribute-btn', function () {
                $('#addAttributeModal').modal('show');
            });

            // Handle save attribute button click
            $('#saveAttributeBtn').click(function () {
                var attributeName = $('#attributeName').val();
                if (attributeName) {
                    $.post('/Product/AddAttribute', { name: attributeName })
                        .done(function (data) {
                            $('.attribute-select').each(function () {
                                $(this).append($('<option></option>').val(data.attributeID).text(data.name));
                            });
                            $('#addAttributeModal').modal('hide');
                            $('#attributeName').val('');
                            toastr.success('Attribute added successfully');
                        })
                        .fail(function () {
                            toastr.error('Error adding attribute');
                        });
                }
            });

            // Handle add to preview button click
            $(document).on('click', '.add-to-preview', function () {
                var form = $(this).closest('.variation-form');
                var attribute = form.find('.attribute-select option:selected').text();
                var value = form.find('.value-input').val();
                var colorCode = form.find('.color-code').val();
                var sku = form.find('.sku').val();
                var description = form.find('.description').val();
                var price = form.find('.price-input').val();
                var stock = form.find('.stock-input').val();
                var minStock = form.find('.minstock-input').val();
                var isActive = form.find('.is-active').is(':checked') ? 'Yes' : 'No';

                var row = `
                    <tr>
                        <td>${attribute}</td>
                        <td>${value}</td>
                        <td style="background-color: ${colorCode || 'transparent'}">${colorCode || '-'}</td>
                        <td>${sku}</td>
                        <td>${description}</td>
                        <td>${price}</td>
                        <td>${stock}</td>
                        <td>${minStock}</td>
                        <td>${isActive}</td>
                        <td>
                            <button type="button" class="btn btn-sm btn-danger remove-preview">
                                <i class="bi bi-trash"></i>
                            </button>
                        </td>
                    </tr>
                `;
                $('#variationsTable tbody').append(row);
            });

            // Handle remove variation button click
            $(document).on('click', '.remove-variation', function () {
                $(this).closest('.variation-form').remove();
            });

            // Handle remove preview button click
            $(document).on('click', '.remove-preview', function () {
                $(this).closest('tr').remove();
            });

            // Form submission with variations data
            $('#productForm').submit(function (e) {
                if ($('#productType').val() === 'variation') {
                    var variations = [];
                    $('#variationsTable tbody tr').each(function () {
                        variations.push({
                            attribute: $(this).find('td:eq(0)').text(),
                            value: $(this).find('td:eq(1)').text(),
                            colorCode: $(this).find('td:eq(2)').text() === '-' ? null : $(this).find('td:eq(2)').text(),
                            sku: $(this).find('td:eq(3)').text(),
                            description: $(this).find('td:eq(4)').text(),
                            price: $(this).find('td:eq(5)').text(),
                            stockQuantity: $(this).find('td:eq(6)').text(),
                            minimumStockLevel: $(this).find('td:eq(7)').text(),
                            isActive: $(this).find('td:eq(8)').text() === 'Yes'
                        });
                    });
                    if (variations.length === 0) {
                        e.preventDefault();
                        toastr.error('Please add at least one variation');
                        return false;
                    }
                    $('<input>').attr({
                        type: 'hidden',
                        name: 'variations',
                        value: JSON.stringify(variations)
                    }).appendTo('#productForm');
                }
                return true;
            });
        });
    </script>
}